package ManifestParser.PermissionsOnly;


import net.dongliu.apk.parser.ApkFile;
import net.dongliu.apk.parser.bean.ApkMeta;
import org.jdom2.Attribute;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.input.SAXBuilder;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Locale;

import static ManifestParser.util.utilities.getFiles;
import static ManifestParser.util.utilities.getManifest;

public class CreateDataset {
  //  static String[] folders = new String[]{"/home/akash/Documents/Dataset/Malware 2010-12", "/home/akash/Documents/Dataset/Goodware 2010-12"};  //Malware , Goodware
   // static String[] folders = new String[]{"/home/akash/Documents/Dataset/androzooMalware15-17", "/home/akash/Documents/Dataset/Goodware 2015-17"};  //Malware , Goodware
    static String[] folders = new String[]{"/home/akash/Documents/Dataset/All/Malware", "/home/akash/Documents/Dataset/All/Goodware"};  //Malware , Goodware

    public static void main(String[] args)
    {
        PermissionsOnlyFeatures2015 f = new PermissionsOnlyFeatures2015();
        f.writeHeading();
        for(int i = 0; i < 2; i++ ) {
            String[] Files = getFiles(folders[i]);
            if(i == 1) PermissionsOnlyFeatures2015.isMalware = 0;
            else PermissionsOnlyFeatures2015.isMalware = 1;
            for (String fileName : Files) {
                try {
                   apkDetails(folders[i] + "/" +fileName);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

        }

    }

    static void apkDetails(String filePath){
        try (ApkFile apkFile = new ApkFile(new File(filePath))) {
            permissionsOnlyDatasetMaker mp = new permissionsOnlyDatasetMaker(getManifest(filePath));
            mp.SAXParser(getManifest(filePath));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}


//Did not Tokenize the permissions.
class permissionsOnlyDatasetMaker {
    String xmlString;

    permissionsOnlyDatasetMaker(String xmlString) {
        this.xmlString = xmlString;
    }

    public void SAXParser(String mani) {
        try {
            SAXBuilder sax = new SAXBuilder();
            InputStream targetStream = new ByteArrayInputStream(mani.getBytes());
            Document doc = sax.build(targetStream);
            Element rootNode = doc.getRootElement();
            PermissionsOnlyFeatures2015 f = new PermissionsOnlyFeatures2015();
            checkPermissions(rootNode, f);
            f.writeHeading();
            f.writeToFile();
        } catch (IOException | JDOMException e) {
            e.printStackTrace();
        }
    }

    void checkPermissions(Element rootNode, PermissionsOnlyFeatures2015 f) {
        List<Element> usesPermissions = rootNode.getChildren("uses-permission");
        for (Element usesPermission : usesPermissions) {
            for (Attribute attri : usesPermission.getAttributes()) {
                String key = attri.getValue();
                if(key.contains(" "))
                    continue;
                key = key.toUpperCase(Locale.ROOT);
                f.add(key);
            }
        }
    }
}

