package ManifestParser.withAPIcalls;

import ManifestParser.util.utilities;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;

public class APICallOnlyFeatures {
    public static String filePath = "/home/akash/Documents/CsvFiles/ALLPermissionsOnlyDataset2018_2020_Cleaned.csv";
    public static String FeatureSetPath = "/home/akash/IdeaProjects/MalwareAnalysis/ManifestParser/withAPIcalls/output/API_CAlls_Only_1819_2022-03-31T18:11:08.925852 (Filtered).txt";
    private TreeMap<String, Integer> hm = utilities.createHM(FeatureSetPath);
    public static int isMalware = 0;

    public void add(String key){
        if(hm.containsKey(key)){
            hm.put(key, hm.get(key)+1);
        }
    }

    public void writeHeading(){

        File tempFile = new File(filePath);
        boolean exists = tempFile.exists();
        if(exists)
            return;
        try
        {
            FileWriter fw = new FileWriter(filePath,true); //the true will append the new data
            for (Map.Entry<String, Integer> entry :
                    hm.entrySet()) {
                fw.write(entry.getKey()+",");
            }
            fw.write("isMalware, ");
            fw.write("\n");
            fw.close();
        }
        catch(IOException ioe)
        {
            System.err.println("IOException: " + ioe.getMessage());
        }
    }
    public void writeToFile(){

        try
        {
            FileWriter fw = new FileWriter(filePath,true); //the true will append the new data
            for (Map.Entry<String, Integer> entry :
                    hm.entrySet()) {
                fw.write(entry.getValue()+", ");
            }
            fw.write(isMalware+",");
            fw.write("\n");
            fw.close();
        }
        catch(IOException ioe)
        {
            System.err.println("IOException: " + ioe.getMessage());
        }
    }
}
