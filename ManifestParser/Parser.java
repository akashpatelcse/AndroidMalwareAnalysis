package ManifestParser;

import net.dongliu.apk.parser.ApkFile;
import net.dongliu.apk.parser.bean.ApkMeta;
import net.dongliu.apk.parser.bean.Permission;
import net.dongliu.apk.parser.bean.UseFeature;
import org.jdom2.Document;
//import org.w3c.dom.Document;
import org.xml.sax.SAXException;


import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;


import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.input.SAXBuilder;

public class Parser {
    static String folderName = "/home/akash/ApkFiles";

    public static void main(String[] args)
    {
        long start2 = System.currentTimeMillis();
        apkDetails(folderName + "/aa.apk");
        manifestParser mp = new manifestParser(getManifest(folderName + "/aa.apk"));
        mp.SAXParser();
        long end2 = System.currentTimeMillis();

        System.out.println("Time = " + Long.toString(end2 - start2));

    }

    static void apkDetails(String filePath){
        try (ApkFile apkFile = new ApkFile(new File(filePath))) {
            ApkMeta apkMeta = apkFile.getApkMeta();
            System.out.println(apkMeta.getLabel());
            System.out.println(apkMeta.getPackageName());
            System.out.println(apkMeta.getVersionCode());
            for (UseFeature feature : apkMeta.getUsesFeatures()) {
                System.out.println(feature.getName());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    static String getManifest(String filePath) {
        try (ApkFile apkFile = new ApkFile(new File(filePath))) {
            String manifestXml = apkFile.getManifestXml();
            String xml = apkFile.transBinaryXml("res/menu/main.xml");
            System.out.println("Manifest: " + manifestXml);
            return manifestXml;
           // System.out.println("XML = " + xml);

        } catch (IOException e) {
            e.printStackTrace();
        }
        return " ";
    }
}

class manifestParser{
    static String xmlString;
    static List<String> permissions;
    static List<String> features;
    static List<String> intentFilter;
    static List<String> service;

    manifestParser(String xmlString){
        manifestParser.xmlString = xmlString;
    }


    public void SAXParser(){
        try {

            SAXBuilder sax = new SAXBuilder();
            // XML is in a web-based location

            InputStream targetStream = new ByteArrayInputStream(xmlString.getBytes());
            Document doc = sax.build(targetStream);

            Element rootNode = doc.getRootElement();
            System.out.println(rootNode.getChildren());
            List<Element> usesPermissions = rootNode.getChildren("uses-permission");
            for (Element usesPermission : usesPermissions) {
                System.out.print(usesPermission.getName() + ": ");
                System.out.println(usesPermission.getAttributes());
            }

            List<Element> application = rootNode.getChildren("application");
            for(Element element : application){
                System.out.print(element.getName() + ": ");
                System.out.println(element.getChildren());
            }


        } catch (IOException | JDOMException e) {
            e.printStackTrace();
        }

    }



}
