package ManifestParser.General_DatasetMaker;




import ManifestParser.util.DatasetFolders;
import ManifestParser.util.ParserUtil;
import net.dongliu.apk.parser.ApkFile;
import net.dongliu.apk.parser.bean.ApkMeta;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import static ManifestParser.util.utilities.getFiles;
import static ManifestParser.util.utilities.getManifest;

public class CreateDataset {

    public static void main(String[] args)
    {
        AllFeatures.filePath = "/home/akash/Documents/N_CSVFiles/E/D3_Everything_last_"+ java.time.LocalDateTime.now()+ ".csv";
        AllFeatures.FeatureSetPath = "/home/akash/Downloads/D3 EveryThing.txt";

        AllFeatures f = new AllFeatures();
        f.writeHeading();

        String[] goodware = DatasetFolders.getGoodware("D3");
        String[] malware =  DatasetFolders.getMalware("D3");
        for(String folder : goodware) {
            String[] Files = getFiles(folder);
            System.out.println("Number of Files" + Files.length);
            for (String fileName : Files) {
                try {
                    AllFeatures.isMalware = 0;
                    apkDetails(folder + "/" + fileName);
                } catch (Exception ignored) {}
                break;
            }

        }

        for(String folder : malware) {
            String[] Files = getFiles(folder);
            System.out.println("Number of Files" + Files.length);
            for (String fileName : Files) {
                try {
                    AllFeatures.isMalware = 1;
                    apkDetails(folder + "/" + fileName);
                } catch (Exception ignored) {}
                break;
            }
        }
        System.out.println("CSV Saved: " + AllFeatures.filePath);
    }

    static void apkDetails(String apkPath){
        try (ApkFile apkFile = new ApkFile(new File(apkPath))) {
            ApkMeta apkMeta = apkFile.getApkMeta();

            String manifestFile = getManifest(apkPath);
            List<String> newList = new ArrayList<String>();


                newList.addAll(ParserUtil.getAttributes(manifestFile, "receiver"));


                newList.addAll(ParserUtil.getAttributes(manifestFile, "activity"));


                newList.addAll(ParserUtil.getAttributes(manifestFile, "service"));


                newList.addAll(ParserUtil.getPermissions(manifestFile));


                newList.addAll(ParserUtil.getUsesFeatures(apkPath));

                newList.addAll(ParserUtil.getApiCalls(apkPath));


            AllFeatures af = new AllFeatures();
            for(String s : newList){
                af.add(s);
            }
            af.writeToFile();
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }


    }


}


