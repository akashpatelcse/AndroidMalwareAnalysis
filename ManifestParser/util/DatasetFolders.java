package ManifestParser.util;

import java.util.stream.Stream;

public class DatasetFolders {

    public static String[] Goodware1012 = new String[]{ "/media/akash/backup/Dataset/10-12 15-17/Goodware 2010-12"};

    public static  String[] Malware1012 = new String[]{"/media/akash/backup/Documents/Dataset/Malware 2010-12"};

    public static String[] Goodware1517 = new String[]{ "/media/akash/backup/Dataset/Goodware 2015-17"};

    public static  String[] Malware1517 = new String[]{"/media/akash/backup/Dataset/Malware 2015-17"};

    public static String[] Goodware1819 = new String[]{
            "/media/akash/backup/Dataset/18-20/benign/2018/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/benign/2018/Q4/12"

            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/benign/2019/Q4/12"};

    public static String[] Malware1819 = new String[] {
            "/media/akash/backup/Dataset/18-20/malware/2018/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/malware/2018/Q4/12"

            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/malware/2019/Q4/12"};

    public static String[] Goodware20 = new String[]{
            "/media/akash/backup/Dataset/18-20/benign/2020/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/benign/2020/Q4/12"};

    public static String[] Malware20 = new String[] {
            "/media/akash/backup/Dataset/18-20/malware/2020/Q1/1"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q1/2"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q1/3"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q2/4"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q2/5"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q2/6"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q3/7"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q3/8"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q3/9"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q4/10"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q4/11"
            ,"/media/akash/backup/Dataset/18-20/malware/2020/Q4/12"};

    public static  String[] partialGoodware1519 = new String[]{"/home/akash/Dataset/D2/goodware"};
    public static  String[] partialMalware1519 = new String[]{"/home/akash/Dataset/D2/malware"};


    public static String[] getGoodware(String D){
        switch (D) {
            case "D1":
                return Goodware1012;
            case "D2":
                return Stream.of(Goodware1517, Goodware1819).flatMap(Stream::of)
                        .toArray(String[]::new);
            case "D3":
                String[] GD1012_1517 = Stream.of(Goodware1517, Goodware1012).flatMap(Stream::of)
                        .toArray(String[]::new);
                return Stream.of(GD1012_1517, Goodware1819).flatMap(Stream::of)
                        .toArray(String[]::new);

            case "PD2":
                return partialGoodware1519;

            case "PD3":
                return Stream.of(partialGoodware1519, Goodware1012).flatMap(Stream::of)
                        .toArray(String[]::new);

            case "20":
                return Goodware20;
            default:
                return null;
        }
    }

    public static String[] getMalware(String D){
        switch (D) {
            case "D1":
                return Malware1012;
            case "D2":
                return Stream.of(Malware1517, Malware1819).flatMap(Stream::of)
                        .toArray(String[]::new);
            case "D3":
                String[] GD1012_1517 = Stream.of(Malware1517, Malware1012).flatMap(Stream::of)
                        .toArray(String[]::new);
                return Stream.of(GD1012_1517, Malware1819).flatMap(Stream::of)
                        .toArray(String[]::new);

            case "PD2":
                return partialMalware1519;

            case "PD3":
                return Stream.of(partialMalware1519, Malware1012).flatMap(Stream::of)
                        .toArray(String[]::new);

            case "20":
                return Malware20;
            default:
                return null;
        }
    }

}
