package FeatureExtractor.General_DatasetMaker;




import FeatureExtractor.util.DatasetFolders;
import FeatureExtractor.util.ParserUtil;
import net.dongliu.apk.parser.ApkFile;
import net.dongliu.apk.parser.bean.ApkMeta;

import java.io.File;
import java.io.IOException;
import java.util.*;

import static FeatureExtractor.util.utilities.getFiles;
import static FeatureExtractor.util.utilities.getManifest;

public class CreateDataset {

    static Set<String> feature; // = new HashSet<>(Arrays.asList("r", "a", "p", "uf", "s")); //r.ac.a.uf.p.s
    public static void main(String[] args){

        //{"r" , "a", "uf", "p", "s", "ac"};
        feature = new HashSet<>();
        feature.addAll(Arrays.asList("r" , "a", "uf", "p", "s", "ac"));

        String Dataset = "D1";

        Dataset = "D3";
        AllFeatures.saveCSVatLocation = "/home/akash/Documents/N_CSVFiles/P+UF+O+A/"+ Dataset +"_____P+UF+O+A_last_"+ java.time.LocalDateTime.now()+ ".csv";
        AllFeatures.FeatureSetPath = "FeatureExtractor/General_featureSetMaker/output/P+uf+O+A__D3__2022-05-26T21:56:29.907843.txt";
        run(Dataset);

        Dataset = "D20";
        AllFeatures.saveCSVatLocation = "/home/akash/Documents/N_CSVFiles/P+UF+O+A/D3___D20__P+UF+O+A_last_"+ java.time.LocalDateTime.now()+ ".csv";
//        AllFeatures.FeatureSetPath = "ManifestParser/General_featureSetMaker/output/Combined__D3__2022-05-26T21:56:29.907843.txt";
        run(Dataset);
    }

    public static void run(String Dataset)
    {

        AllFeatures f = new AllFeatures();
        f.writeHeading();

        String[] goodware = DatasetFolders.getGoodware(Dataset);
        String[] malware =  DatasetFolders.getMalware(Dataset);
        for(String folder : goodware) {
            String[] Files = getFiles(folder);
            System.out.println("Number of Files" + Files.length);
            for (String fileName : Files) {
                try {
                    AllFeatures.isMalware = 0;
                    apkDetails(folder + "/" + fileName);
                } catch (Exception ignored) {}
            }

        }

        for(String folder : malware) {
            String[] Files = getFiles(folder);
            System.out.println("Number of Files" + Files.length);
            for (String fileName : Files) {
                try {
                    AllFeatures.isMalware = 1;
                    apkDetails(folder + "/" + fileName);
                } catch (Exception ignored) {}
            }
        }
        System.out.println("CSV Saved: " + AllFeatures.saveCSVatLocation);
    }

    static void apkDetails(String apkPath){
        try (ApkFile apkFile = new ApkFile(new File(apkPath))) {
            ApkMeta apkMeta = apkFile.getApkMeta();

            String manifestFile = getManifest(apkPath);
            List<String> newList = new ArrayList<String>();


            if(feature.contains("r")){
                newList.addAll(ParserUtil.getAttributes(manifestFile, "receiver"));
            }
            if(feature.contains("a")){
                newList.addAll(ParserUtil.getAttributes(manifestFile, "activity"));
            }
            if(feature.contains("s")){
                newList.addAll(ParserUtil.getAttributes(manifestFile, "service"));
            }
            if(feature.contains("p")){
                newList.addAll(ParserUtil.getPermissions(manifestFile));
            }
            if(feature.contains("uf")){
                newList.addAll(ParserUtil.getUsesFeatures(apkPath));
            }

            if(feature.contains("ac")) {
                newList.addAll(ParserUtil.getApiCalls(apkPath));
            }


            AllFeatures af = new AllFeatures();
            for(String s : newList){
                af.add(s);
            }
            af.writeToFile();
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }


    }


}


